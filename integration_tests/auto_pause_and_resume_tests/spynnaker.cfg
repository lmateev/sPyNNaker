[Logging]
# ------
# Logging levels are as specified for the Python logging module.
# Listing a module below overrides the default logging level for that module
# and its children (unless they are also overridden).
#
# e.g., the following sample would set the default level to info, but display
# debug messages for pacman103.front.pynn, and only display warning messages
# for pacman.core
#
#     default = info
#     debug = front.pynn
#     info =
#     warning = core
#     error =
#     critical =
#
# The ```instantiate``` option determines whether front-ends set up loggers.
# If ```instantiate``` is True then users do not need to set up their own
# loggers.  If it is False, then users need to instantiate a logger at the top
# of each script, this is simply achieved by inserting the following lines at
# the top of the file.
#
#    include logging
#    logger = logging.basicConfig()
#
instantiate = True
default = info
debug =
info =
warning =
error =
critical =

[Reports]
# If reportsEnabeld is false, no text reports are written.
# writeTextSpecs: If True, produce text version of each Data Spec,
#                 in reports/dataSpec directory
# writeRouterReports: If True, each router file is written in
#                 text format to reports/routers
reportsEnabled = True
writeTextSpecs = False
writePartitionerReports = True
writePlacerReportWithPartitionable = True
writePlacerReportWithoutPartitionable = False
writeRouterReports = True
writeRouterInfoReport = True
writeRouterDatReport = False
writeTransceiverReport = True
writeMemoryMapReport = True
writeNetworkSpecificationReport = True
writeProvanceData = True
writeTagAllocationReports = True
outputTimesForSections = True
writeReloadSteps = False
max_reports_kept = 10
max_application_binaries_kept = 10

[Simulation]
# Maximum spikes per second of any neuron (spike rate in Hertz)
spikes_per_second = 30

# The number of standard deviations from the mean to account for in
# the ring buffer in terms of how much safety in precision vs overflowing the
# end user is willing to risk
ring_buffer_sigma = 5

[Machine]
max_sdram_allowed_per_chip = 3000000

[Recording]
#---------

# Uncomment the following to change from the defaults
live_spike_port = 17895
live_spike_host = 0.0.0.0
# Dodge support for auto_pause_and_resume with space optimsed partitioners
extra_recording_data_for_static_sdram_usage = 10000

[Buffers]
# Host and port on which to receive buffer requests
receive_buffer_port = 17896
receive_buffer_host = 0.0.0.0

# Buffered recording can be enabled below.  Note that spike source array
# recording is always buffered.
enable_buffered_recording = True

# These values can be adjusted to set the maximum amount of SDRAM per core
# that will be used for the various neuron parameters to be recorded.  This
# will affect how many neurons can fit on a chip.
spike_buffer_size = 1048576
v_buffer_size = 1048576
gsyn_buffer_size = 2097152

use_auto_pause_and_resume = True

# Advanced parameters to further control buffering
buffer_size_before_receive = 16384
time_between_requests = 50

[Mode]
#mode = Production or Debug
mode = Production
verify_writes = False

[Database]
create_database = None
wait_on_confirmation = True
send_start_notification = True
create_routing_info_to_neuron_id_mapping = True
listen_port = None
notify_port = 19999
notify_hostname = localhost
